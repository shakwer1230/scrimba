事件处理
    监听事件  v-on
    $event 用特殊变量 $event访问原始的 DOM 事件

    附注：event.stopPropagation() 阻止冒泡(事件向上传递给父级dom)/event.preventDefault() 阻止默认事件 调用此方法 连接不会被打开 但是会冒泡/return false阻止冒泡和阻止打开默认事件  

    事件修饰符
    v-on 修饰符是由点开头的指令后缀来表示的
    <!-- 阻止单击事件继续传播 -->
    <a v-on:click.stop="doThis"></a>

    <!-- 提交事件不再重载页面 -->
    <form v-on:submit.prevent="onSubmit"></form>

    <!-- 修饰符可以串联 -->
    <a v-on:click.stop.prevent="doThat"></a>

    <!-- 只有修饰符 -->
    <form v-on:submit.prevent></form>

    <!-- 添加事件监听器时使用事件捕获模式 -->
    <!-- 即元素自身触发的事件先在此处理，然后才交由内部元素进行处理 -->
    <div v-on:click.capture="doThis">...</div>

    <!-- 只当在 event.target 是当前元素自身时触发处理函数 -->
    <!-- 即事件不是从内部元素触发的 -->
    <div v-on:click.self="doThat">...</div>

    <!-- 点击事件将只会触发一次 -->
    <a v-on:click.once="doThis"></a>


    <!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 -->
    <!-- 而不会等待 `onScroll` 完成  -->
    <!-- 这其中包含 `event.preventDefault()` 的情况 -->
    <div v-on:scroll.passive="onScroll">...</div>  
    .passive 会告诉浏览器你不想阻止事件的默认行为

按键修饰符
    <!-- 只有在 `key` 是 `Enter` 时调用 `vm.submit()` -->
    <input v-on:keyup.enter="submit">
    可以直接将 KeyboardEvent.key 暴露的任意有效按键名转换为 kebab-case 来作为修饰符。
    <input v-on:keyup.page-down="onPageDown">

按键码
    <input v-on:keyup.13="submit">
    提供了绝大多数常用的按键码的别名
        .enter
        .tab
        .delete (捕获“删除”和“退格”键)
        .esc
        .space
        .up
        .down
        .left
        .right
    还可以通过全局 config.keyCodes 对象自定义按键修饰符别名
        // 可以使用 `v-on:keyup.f1`
        Vue.config.keyCodes.f1 = 112

系统修饰键
    如下修饰符来实现仅在按下相应按键时才触发鼠标或键盘事件的监听器
    .ctrl
    .alt
    .shift
    .meta
    在 Mac 系统键盘上，meta 对应 command 键 (⌘)。在 Windows 系统键盘 meta 对应 Windows 徽标键 (⊞)。在 Sun 操作系统键盘上，meta 对应实心宝石键 (◆)。在其他特定键盘上，尤其在 MIT 和 Lisp 机器的键盘、以及其后继产品，比如 Knight 键盘、space-cadet 键盘，meta 被标记为“META”。在 Symbolics 键盘上，meta 被标记为“META”或者“Meta”

.exact 修饰符
    .exact 修饰符允许你控制由精确的系统修饰符组合触发的事件。
    <!-- 即使 Alt 或 Shift 被一同按下时也会触发 -->
    <button @click.ctrl="onClick">A</button>

    <!-- 有且只有 Ctrl 被按下的时候才触发 -->
    <button @click.ctrl.exact="onCtrlClick">A</button>

    <!-- 没有任何系统修饰符被按下的时候才触发 -->
    <button @click.exact="onClick">A</button>

鼠标按钮修饰符
    这些修饰符会限制处理函数仅响应特定的鼠标按钮。
    .left
    .right
    .middle